// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Globalization;

namespace System
{
    internal static class StringExtensions
    {
        private const char _quote = '"';
        private const string _omissionString = "...";

        public static string TruncateAtWordBoundary(this string input, int length)
        {
            if (string.IsNullOrEmpty(input) || input.Length < length)
            {
                return input;
            }

            var nextSpace = input.LastIndexOf(" ", length - _omissionString.Length, StringComparison.Ordinal);

            return string.Format(CultureInfo.CurrentCulture, "{0}{1}",
                                input.Substring(0, (nextSpace > 0) ? nextSpace : length).Trim(),
                                _omissionString);
        }

        public static string RemoveSurroundingQuotes(this string value)
        {
            if (value[0] != _quote)
                return value;
            if (value[value.Length - 1] != _quote)
                return value;

            return value.Substring(1, value.Length - 2);
        }
    }
}
