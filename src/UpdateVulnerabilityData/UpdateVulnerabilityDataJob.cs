// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Autofac;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using NuGet.Jobs;
using NuGet.Jobs.Configuration;
using UpdateVulnerabilityData.CVE;
using UpdateVulnerabilityData.CWE;

namespace UpdateVulnerabilityData
{
    internal class UpdateVulnerabilityDataJob : JsonConfigurationJob
    {
        private const string UpdateVulnerabilityDataConfigurationSectionName = "UpdateVulnerabilityDataConfiguration";

        public override async Task Run()
        {
            var cweDataClient = _serviceProvider.GetRequiredService<ICWEDataClient>();
            var cveDataClient = _serviceProvider.GetRequiredService<ICVEDataClient>();

            // Import the retrieved data into the gallery database.
            using (var connection = await OpenSqlConnectionAsync<GalleryDbConfiguration>())
            {
                // Refresh CVE data.
                await cveDataClient.RefreshCVEDataAsync(connection, CancellationToken.None);

                // Refresh CWE data.
                await cweDataClient.RefreshCWEDataAsync(connection, CancellationToken.None);

                // Todo
            }
        }

        protected override void ConfigureAutofacServices(ContainerBuilder containerBuilder)
        {
        }

        protected override void ConfigureJobServices(IServiceCollection services, IConfigurationRoot configurationRoot)
        {
            ConfigureInitializationSection<UpdateVulnerabilityDataConfiguration>(services, configurationRoot);

            services.Configure<UpdateVulnerabilityDataConfiguration>(configurationRoot.GetSection(UpdateVulnerabilityDataConfigurationSectionName));

            services.AddTransient<ICWEDataClient, CWEDataClient>();
            services.AddTransient<ICWECsvFileParser, CWECsvFileParser>();
            services.AddTransient<ICWEDataDownloader, CWEDataDownloader>();

            services.AddTransient<ICVEDataClient, CVEDataClient>();
            services.AddTransient<ICVEJsonFileParser, CVEJsonFileParser>();
            services.AddTransient<ICVEDataDownloader, CVEDataDownloader>();

            services.AddSingleton<HttpClient>();
        }
    }
}